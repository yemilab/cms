# Generated by Django 2.2.7 on 2019-12-13 02:23

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields


class Migration(migrations.Migration):

    dependencies = [
        ('wagtaildocs', '0010_document_file_hash'),
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
        ('publication', '0015_auto_20191211_2350'),
    ]

    operations = [
        migrations.CreateModel(
            name='NotePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('date', models.DateField(verbose_name='Published date')),
                ('group', models.CharField(choices=[('GENERAL', 'GENERAL'), ('KIMS', 'KIMS'), ('AMORE', 'AMORE'), ('SBL', 'SBL'), ('SIMULATION', 'SIMULATION')], max_length=64)),
                ('classification', models.CharField(choices=[('PHYS', 'PHYS'), ('ANAL', 'ANAL'), ('HARD', 'HARD'), ('SOFT', 'SOFT'), ('THESIS', 'THESIS'), ('PUB', 'PUB'), ('DOC', 'DOC')], max_length=64)),
                ('number', models.IntegerField(unique=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='NotesIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('title_ko', models.CharField(max_length=255, verbose_name='Title (Korean)')),
                ('description', models.TextField(blank=True, help_text='Text to describe the page', verbose_name='Description (English)')),
                ('description_ko', models.TextField(blank=True, help_text='Text to describe the page', verbose_name='Description (Korean)')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='NotePersonRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_note_relationship', to='wagtaildocs.Document')),
                ('note', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='note_document_relationship', to='publication.NotePage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotePageTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='publication.NotePage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publication_notepagetag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='notepage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='publication.NotePageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
